- name: Dnsmasq | restart network
  command: /bin/true
  notify:
    - Dnsmasq | reload network
    - Dnsmasq | update resolvconf
  when: ansible_os_family != "CoreOS"

- name: Dnsmasq | reload network
  service:
    name: >-
      {% if ansible_os_family == "RedHat" -%}
      network
      {%- elif ansible_os_family == "Debian" -%}
      networking
      {%- endif %}
    state: restarted
  when: ansible_os_family != "RedHat" and ansible_os_family != "CoreOS"

- name: Dnsmasq | update resolvconf
  command: /bin/true
  notify:
    - Dnsmasq | reload resolvconf
    - Dnsmasq | reload kubelet

- name: Dnsmasq | reload resolvconf
  command: /sbin/resolvconf -u
  ignore_errors: true

- name: Dnsmasq | reload kubelet
  service:
    name: kubelet
    state: restarted
  when: "{{ inventory_hostname in groups['kube-master'] }}"
  ignore_errors: true
